 {
  "compilerOptions": {
    "declaration": true,
    "sourceMap": true,
    "incremental": true,
    /* Visit https://aka.ms/tsconfig to read more about this file */
    "target": "es2017",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "experimentalDecorators": true,                   /* Enable experimental support for TC39 stage 2 draft decorators. */
    "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */
    "module": "commonjs",                                /* Specify what module code is generated. */
    "rootDir": "./src",                                  /* Specify the root folder within your source files. */
    "moduleResolution": "node",                       /* Specify how TypeScript looks up a file from a given module specifier. */
    "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
    "paths": {
      "@root/*": [
        "./*"
      ],
      "@src/*": [
        "src/*"
      ],
      "@guards/*": [
        "src/guards/*"
      ],
      "@helpers/*": [
        "src/helpers/*"
      ],
      "@validations/*": [
        "validations/*"
      ],
      "@decorators/*": [
        "src/decorators/*"
      ],
      "@config/*": [
        "src/config/*"
      ],
      "@user/*": [
        "src/user/*"
      ],
      "@auth/*": [
        "src/auth/*"
      ],
    },                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
    "typeRoots": [
      "src/@types",
      "node_modules/@types"
    ],                                  /* Specify multiple folders that act like './node_modules/@types'. */
    "resolveJsonModule": true,                        /* Enable importing .json files. */
    "outDir": "./build",                                   /* Specify an output folder for all emitted files. */
    "removeComments": true,                           /* Disable emitting comments. */
    "noEmitOnError": false,                            /* Disable emitting files if any type checking errors are reported. */
    "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": false,            /* Ensure that casing is correct in imports. */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "noImplicitAny": false,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": false,                         /* When type checking, take into account 'null' and 'undefined'. */
    "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictBindCallApply": false,                      /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    "strictPropertyInitialization": false,             /* Check for class properties that are declared but not set in the constructor. */
    "noImplicitThis": true,                           /* Enable error reporting when 'this' is given the type 'any'. */
    "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
    "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": false,               /* Enable error reporting for fallthrough cases in switch statements. */
    "noUncheckedIndexedAccess": true,                 /* Add 'undefined' to a type when accessed using an index. */
    // "noPropertyAccessFromIndexSignature": true,       /* Enforces using indexed accessors for keys declared using an indexed type. */
    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
  },
  "include": ["src/**/*.ts", "src/**/*.js"],
  "exclude": ["node_modules", "build", "__tests__","**/*.spec.ts",
  "**/*.test.ts"]
}